# Default values for spiffe-step-ssh.
# SPDX-License-Identifier: APACHE-2.0

## @skip global
global: {}

## @skip step
step:
  service:
    targetPort: 8443
  inject:
    enabled: false
  bootstrap:
    enabled: false
    configmaps: false
    secrets: false
  existingSecrets:
    enabled: true
    ca: true
    issuer: true
    certsAsSecret: false
    configAsSecret: false
    sshHostCa: true
    sshUserCa: true

spiffeHelper:
  ## @param spiffeHelper.image.registry The OCI registry to pull the image from
  ## @param spiffeHelper.image.repository The repository within the registry
  ## @param spiffeHelper.image.pullPolicy The image pull policy
  ## @param spiffeHelper.image.tag Overrides the image tag whose default is the chart appVersion
  ##
  image:
    registry: ghcr.io
    repository: spiffe/spiffe-helper
    pullPolicy: IfNotPresent
    tag: 0.8.0

nginx:
  ## @param nginx.image.registry The OCI registry to pull the image from
  ## @param nginx.image.repository The repository within the registry
  ## @param nginx.image.pullPolicy The image pull policy
  ## @param nginx.image.tag Overrides the image tag whose default is the chart appVersion
  ##
  image:
    registry: docker.io
    repository: nginxinc/nginx-unprivileged
    pullPolicy: IfNotPresent
    tag: 1.25.3-alpine

kubectl:
  ## @param kubectl.image.registry The OCI registry to pull the image from
  ## @param kubectl.image.repository The repository within the registry
  ## @param kubectl.image.pullPolicy The image pull policy
  ## @param kubectl.image.tag Overrides the image tag whose default is the chart appVersion
  ##
  image:
    registry: docker.io
    repository: rancher/kubectl
    pullPolicy: IfNotPresent
    tag: ""

yq:
  ## @param yq.image.registry The OCI registry to pull the image from
  ## @param yq.image.repository The repository within the registry
  ## @param yq.image.pullPolicy The image pull policy
  ## @param yq.image.tag Overrides the image tag whose default is the chart appVersion
  ##
  image:
    registry: docker.io
    repository: mikefarah/yq
    pullPolicy: IfNotPresent
    tag: "4.40.5"

busybox:
  ## @param yq.image.registry The OCI registry to pull the image from
  ## @param yq.image.repository The repository within the registry
  ## @param yq.image.pullPolicy The image pull policy
  ## @param yq.image.tag Overrides the image tag whose default is the chart appVersion
  ##
  image:
    registry: docker.io
    repository: busybox
    pullPolicy: IfNotPresent
    tag: "1.36.1-uclibc"

## @param imagePullSecrets [array] Pull secrets for images
imagePullSecrets: []

## @param nameOverride Name override
nameOverride: ""

## @param fullnameOverride Fullname override
fullnameOverride: ""

## @param serviceAccount.create Specifies whether a service account should be created
## @param serviceAccount.annotations [object] Annotations to add to the service account
## @param serviceAccount.name The name of the service account to use. If not set and create is true, a name is generated.
##
serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  # FIXME
  runAsUser: 0

fetchca:
  replicaCount: 1

  service:
    type: ClusterIP
    port: 443

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: Prefix
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  sidecarResources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

config:
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  sidecarResources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}
